export default {
    option: "Option",
    options: "Options",
    openPosition: "openPosition",
    openPositionTips: "openPositionTips",
    notes: "Notes",
    Subscription: "Subscription",
    detail: "Detail",
    investing: "Investing",
    noteClosed: "Notes Closed",
    close: "Close",
    cancelled: "Cancelled",
    day: "Day",
    date: "Date",
    closedEndFund: "Closed-End Fund",
    total: "Total",
    maturity: "Maturity",
    knockout: "Knockout",
    back: "Back",
    waiting: "Waiting",
    pending: "Pending",
    cancel: "Cancel",
    projectAbbr: "Option",
    name: "Name",
    operation: "Action",
    profit: "Profit",
    baseToken: "Base Token",
    closeTime: "Close time",
    incomeTip: "Close position price is calculated according to the close position rule, which is lower than option price.",
    status: "Status",
    archive: "Archive",
    side: "Side",
    buyingPeriod: "Subscription Period",
    exercisePrice: "Exercise Price",
    underlyingAsset: 'Underlying Index',
    period: "Period",
    withdraw: "Withdraw",
    withdrawPrincipal: "Withdraw Principal",
    exerciseCycle: 'Exercise Cycle',
    direction: 'Call/Put',
    confirm: 'Confirm',
    position: "Position",
    income: "Income",
    subMargin: "Sub Margin",
    exerciseTime: 'Exercise Time',
    makerMargin: "Margin",
    closePosition: "Close position",
    walletBalance: "Wallet Balance",
    handleFee: "Handle fee",
    closePrice: "Close price",
    insufficientBalance: 'Insufficient balance',
    id: "ID",
    type: "Type",
    noteInventory: "Notes Inventory",
    kline: {
        lastIndex: 'Last Price',
        openingIndex: 'Open Price',
        openingTime: 'Start Time',
        weekly: 'W',
        daily: 'D',
        hourly: 'H',
        minutely: 'M',
        noData: 'Nodata'
    },
    transaction: {
        packing: "Packing",
        pending: "Pending",
        transaction: "Transaction",
        userCanceled: "User Canceled",
        dialogStatus: {
            0: "Confirm",
            1: "Packing",
            2: "Pending",
        },
        confirm: "Confirm",
        confirmTrade: "Confirm Trade",
        success: "Success",
        cancel: "Cancel",
        auth: 'Auth',
        authFailed: 'Auth Failed',
        authSuccess: 'Auth Success',
        fail: "Fail",
        underConfirmation: 'Under Confirmation',
        hash_link: {
            "1": "https://kovan.etherscan.io/tx/{hash}",
            "2": "https://testnet.bscscan.com/tx/{hash}",
            "3": "https://testnet.arbiscan.io/txt/{hash}",
        }
    },
    wallet: {
        openWallet: "Open Wallet",
        connectWallet: "Connect Wallet",
        connectingWallet: 'Connecting Wallet',
        connectYourWallet: "Connect your wallet"
    },
    OptionTrade: {
        positions: "Positions",
        current: "Current",
        optionSummary: "Option Summary",
        notMaketMaker: "Not Market Maker",
        optionManagement: 'Manage Options',
        optionsList: 'Options List',
        depositMargin: "Deposit Margin",
        withdrawMargin: "Withdraw Margin",
        viewShare: "View Share",
        marketMakerProfit: 'Profit',
        contractPrice: 'Contract price',
        exerciseCycle: 'Cycle',
        margin: 'Margin',
        insufficientBalance: 'Insufficient balance',
        total: "Total",
        withdrawalMakerDeposit: 'Withdraw margin',
        indexPrice: 'Index price',
        knockoutRange: 'Knockout',
        totalShare: 'Total share',
        tradeTime: "Trade Time",
        tradePrice: "Trade Price",
        unrealizedProfit: "Unrealized Profit",
        quantity: "Quantity",
        remainingShare: 'Remaining share',
        depositPaid: 'Deposit paid',
        totalProfit: 'Total profit',
        noData: 'No data',
        retrievableProfit: 'Retrievable profit',
        retrieval: 'Rretrieval',
        incomeRecovered: 'Income recovered',
        noteProfit: 'Notes profit',
        confirmSubmit: 'Confirm Submit',
        authorization: 'Authorization',
        commissionPrice: 'Commission price',
        buyShare: 'BuyShare',
        insufficientShare: 'Insufficient share',
        remaining: 'Remaining',
        share: 'Share',
        amount: 'Amount',
        handleFee: 'Handle fee',
        signatureFailed: 'Signature failed',
        buying: 'Buying',
        knockouted: 'Knockouted',
        over: 'Over',
        statusOption: {
            0: "Waiting liquidation",
            1: "Exercised",
            2: {
                "1": "Knocked out",
                "2": "BSC out",
            },
        },
        delete: 'Delete',
        totalMargin: "Total Margin",
        frozenMargin: "Frozen Margin",
        availableMargin: "Available Margin",
        sold: "Sold",
        quantitySold: "Quantity Sold",
        history: "History",
        soldOption: "Sold Options",
        inputAmountOfDespoitMargin: "Input Deposit Amount",
        inputAmountOfWithdrawMargin: "Input Amount",
        active: "Active",
        inactive: "Inactive",
        retrievable: 'Retrievable',
        knockOutRatio: 'Knockout',
        optionCall: 'Call',
        optionPut: 'Put',
        initialPrice: 'Initial Price',
        exerciseTime: 'Expiration Date',
        platformFee: "Platform Fee",
        knockoutedout: "Knockouted Out",
        upperBarrier: 'Upper barrier',
        lowerBarrier: 'Lower barrier',
        buyingPrice: 'Offer Price',
        MaximumLeverage: 'Max Leverage',
        tradingList: 'Trading List',
        deal: 'Deal',
        closePosition: 'Close Position',
        knockOutLiquidation: 'Knockout Liquidation',
        exercise: 'Exercise',
        buy: 'BUY',
        knockOut: 'Knockout',
        direction: 'Call/Put',
        payToken: 'Base Token',
        averagePrice: 'Average Price',
        position: 'Position',
        holdingProfit: 'Holding Profit',
        token: 'Token',
        dealPrice: 'Deal Price',
        volume: 'Volume',
        profit: 'Profit',
        dealTime: 'Deal Time',
        status: 'Status',
        openPrice: "Open Price",
        maximum: 'Max',
        insufficientPositions: 'Insufficient Positions',
    },
    note: {
        view: "View",
        note: "Notes",
        isClosed: "Is closed",
        assets: 'Assets',
        matured: "Matured",
        canceled: "Canceled",
        noteBanner1: 'Structured notes are issued by fund managers for passive investors to subscribe. Fund managers make investment decisions for investors and earn fees for the services provided. These notes have predetermined allocations to specific investment vehicles.',
        noteBanner2: 'The subscribed USDC is transferred to the contract address of the fund manager,',
        noteBanner3: '80% is invested in Compound high-quality assets, and 20% is invested in the share of Clear option trading contracts.',
        noteBanner4: 'The system displays the overall return rate obtained by the fund manager through Compound and Clear option transactions to users.',
        subscription: 'Subscription',
        live: "Live",
        redemption: 'Redemption',
        fundManager: 'Fund Manager',
        stage: 'Stage',
        investmentStrategy: 'Notes Components',
        option: 'Option',
        compound: 'Compound',
        venus: 'Venus',
        apy: 'APY',
        subscriptionStart: 'Start',
        endOfSubscription: 'End',
        subscriptionPeriod: 'Subscription Period',
        closePeriodStart: 'Live',
        maturityDate: 'Maturity Date',
        maturityDistribution: 'Maturity Distribution',
        selectPeriod: 'Select Period',
        walletBalance: 'Wallet Balance',
        noteMaturity: 'Notes Maturity',
        maximum: 'Max',
        availableInvestOption: "Available Invest Option",
        investmentCompound: 'Investment Compound',
        investment: 'Investment ',
        investmentOption: 'Investment Option',
        commission: 'Commission',
        investmentList: 'Investment List',
        participationFixedAmount: 'Participation Fixed Amount',
        cumulativeRevenue: 'Cumulative Revenue',
        day: 'Day',
        insufficientBalance: 'Insufficient Balance',
        withdrawPrincipal: 'Withdraw Principal',
        investmentIncome: 'Investment Income',
        investmentIncomeTips: '(Display the investment income according to the selected investment period)',
        retrievable: 'Retrievable',
        underSubscription: 'Under Subscription',
        investmentPeriod: 'Investment Period',
        isEnded: 'IsEnded',
        redeemed: 'Redeemed',
        investmentToken: 'Base Token',
        investmentAmount: 'Investment Amount',
        maturity: 'Maturity',
        operation: 'Action',
        insufficientPositions: 'Insufficient Positions',
        status: "Status",
        positions: "positions",
    },
    Overview: {
        clearOverview: "CLEAR Overview",
        tvl: "TVL",
        volumeH: "Volume 24H",
        volumeD: "Volume 7D",
        topIndex: "Top Index",
        topOptionPool: "Top Option Pool",
        topFundManager: "Top Fund Manager",
        index: "Index",
        chains: "Chains",
        theCurrentValue: "The Current Value",
        optionPool: "Option Pool",
    },
    FundManager: {
        isClosed: "Is closed",
        subscriptionStart: 'Start',
        endOfSubscription: 'End',
        closePeriodStart: 'Live',
        BorrowingLimit: "Borrowing limit",
        BorrowingLimitUsed: "Borrowing Limit used",
        CurrentPledge: "Current Pledge",
        insufficientBalance: 'Insufficient balance',
        notManager: "Not manager",
        notYetInvestment: "Not yet investment",
        investmentToken: 'Base Token',
        investmentStrategy: 'Notes Components',
        issueClosedEndFund: 'Notes Issuance',
        fundList: 'Notes Inventory',
        capital: 'Funds',
        profitAndLoss: 'Profit',
        submitCommission: 'Submit commission',
        cancel: 'Cancel',
        confirm: 'Confirm',
        packing: 'Packing',
        underConfirmation: 'Under confirmation',
        commissionPrice: 'Commission price',
        buyShare: 'BuyShare',
        insufficientShare: 'Insufficient share',
        remaining: 'Remaining',
        share: 'Share',
        amount: 'Amount',
        insufficientPositions: 'Insufficient positions',
        UsdtBalance: 'USDC balance',
        cUsdtBalance: 'CUSDC balance',
        netProfitRate: 'Net profit rate',
        supplyTheMarket: 'Supply market',
        supply: 'Supply',
        withdrawal: 'Withdrawal',
        supplyRate: 'Supply rate',
        depositAPY: 'Deposit APY',
        distributionApy: 'Distribution APY',
        determine: 'Determine',
        assets: 'Assets',
        wallet: 'Wallet',
        inputAmountError: 'Input amount error',
        exceedMaxAmount: 'Exceed max amount',
        income: 'Income',
        handleFee: 'Handle fee',
        insufficientPosition: 'Insufficient position',
        selectUnderlying: 'Select underlying',
        selectKnockOutRange: 'Select Knockout range',
        selectExerciseCycle: 'Select exercise cycle',
        paymentToken: 'Payment token',
        enterInitialPrice: 'Enter initial price',
        bond: 'Bond',
        notMarketMaker: 'Not market maker',
        balance: 'Balance',
        configure: 'Issue',
        authorization: 'Authorization',
        closeTime: "Close Time",
        compoundInvestmentLimit: ' Investment Limit',
        totalProfitOrApy: 'Total Profit  APY',
        optionInvestmentLimit: 'Option Investment Limit',
        investedFunds: 'Invested Funds',
        subscriptionRecords: 'Subscription Records',
        arrival: 'Arrival',
        retrieve: 'Retrieve',
        purchaseAddress: 'Purchase Address',
        number: 'Number',
        time: 'Time',
        totalFunds: 'Total Funds',
        uninvestedFunds: "Uninvested Funds",
        exerciseData: "Maturity Date",
        profit: 'Profit',
        investing: 'Investing',
        fundExpired: 'Fund expired',
        cancelled: 'Cancelled',
        unsubscribed: 'Unsubscribed',
        fundName: 'Fund name',
        enterFundName: 'type note name',
        issuer: 'Issuer',
        totalInvestmentAmount: 'Total Investment Amount',
        optionFund: 'Option fund',
        compoundAvailableAmount: ' Available Amount',
        compoundProfitApy: ' Profit APY',
        optionProfitApy: 'Option Profit APY',
        noteProfitList: 'Notes List',
        statusFilter: 'Status filter',
        dividendPaid: 'Dividend paid',
        fundEnded: 'Fund ended',
        details: 'Detail',
        investmentProfit: 'Notes Profit',
        managerIncomePercent: 'Issuer income percent',
        fundManagerIncomeDividend: 'Fund manager income dividend',
        maturityTime: 'Maturity Date',
        issueFund: 'Issue fund',
        chooseInvestmentProjects: 'Investment projects',
        noteMaturity: 'Notes Maturity',
        investmentProportion: 'Investment proportion',
        investmentProject: 'Income Component',
        investmentPercent: 'Income Allocation',
        derivatinComponent: 'Derivative Component',
        derivatinAllocation: 'Derivative Allocation',
        apy: 'APY',
        calculatedAccording: 'Calculated According',
        subscriptionPeriod: 'Subscription Period',
        investmentTime: 'Live Date',
        fundManagerIncome: 'Fees',
        fixedRatio: 'Management Fee',
        floatingRatio: 'Performance Fee',
        notFundManager: 'Not fund manager',
        notOnTime: 'Not on time',
        selectExercisePeriod: 'Select exercise period',
        token: "Token",
        quantity: "Quantity",
        view: "View",
        totalProfit: "Total Profit",
        id: "ID",
        transaction: "Transaction",
        status: "Status",
        detail: "Detail",
        performanceFee: "Performance Fee",
        managementFee: "Management Fee",
    },
    swap: {
        from: 'From',
        reach: 'Reach',
        maximum: 'Maximum',
        selectToken: 'SelectToken',
        getUSDTQuantity: 'GetUSDCQuantity',
        tradeSlipPoint: 'TradeSlipPoint',
        exchange: 'Exchange',
    }
}
